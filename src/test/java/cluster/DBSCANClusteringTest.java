package cluster;

import java.util.ArrayList;
import util.SnapshotVisualizer;

import model.Cluster;
import model.Point;
import model.SnapShot;

public class DBSCANClusteringTest {
    public static void main(String[] args) {
	SnapShot sp = new SnapShot(0);
	sp.addObject(0, new Point(0.7243335795890035, 0.334148135577478));
	sp.addObject(1, new Point(0.36468475755306207, 0.9042296701787175));
	sp.addObject(2, new Point(0.06946590550434995, 0.9086774933032021));
	sp.addObject(3, new Point(0.6398239743063224, 0.22409999021234173));
	sp.addObject(4, new Point(0.8615121555529307, 0.18624412994736383));
	sp.addObject(5, new Point(0.05633128536921295, 0.19463693065601595));
	sp.addObject(6, new Point(0.8868420607687184, 0.0033468679029694526));
	sp.addObject(7, new Point(0.13991469951310564, 0.8316518054208959));
	sp.addObject(8, new Point(0.5299778641270537, 0.6927013258617507));
	sp.addObject(9, new Point(0.9257942682404027, 0.6390003936368627));
	sp.addObject(10, new Point(0.874793050372851, 0.715601259772772));
	sp.addObject(11, new Point(0.6391267706000998, 0.8782798142157212));
	sp.addObject(12, new Point(0.8835129023667023, 0.63582202833214));
	sp.addObject(13, new Point(0.5855108304150646, 0.7021160749779247));
	sp.addObject(14, new Point(0.046247519234596024, 0.06241639028059209));
	sp.addObject(15, new Point(0.13893157032448822, 0.9644283308365843));
	sp.addObject(16, new Point(0.1721080628628615, 0.9123848095220406));
	sp.addObject(17, new Point(0.1959501132799455, 0.572811748090436));
	sp.addObject(18, new Point(0.9275280325217607, 0.9740861976921622));
	sp.addObject(19, new Point(0.10263797361918181, 0.7061903447073085));
	sp.addObject(20, new Point(0.31823081413495147, 0.2883870903312924));
	sp.addObject(21, new Point(0.8547019015546267, 0.08514770307054076));
	sp.addObject(22, new Point(0.5583557103793728, 0.30693055287780346));
	sp.addObject(23, new Point(0.3214401925863779, 0.7528522474191623));
	sp.addObject(24, new Point(0.6735745226977422, 0.135538396221475));
	sp.addObject(25, new Point(0.35061647445296407, 0.5012508049237738));
	sp.addObject(26, new Point(0.7446016274975363, 0.4256440668373481));
	sp.addObject(27, new Point(0.874032552046546, 0.16021257114898024));
	sp.addObject(28, new Point(0.9133198330986463, 0.6377850041584336));
	sp.addObject(29, new Point(0.5525270864692032, 0.45656308278109636));
	sp.addObject(30, new Point(0.14581601057993043, 0.4685673644329196));
	sp.addObject(31, new Point(0.07432234884349787, 0.045455733853499325));
	sp.addObject(32, new Point(0.27493934515621, 0.20614799767427083));
	sp.addObject(33, new Point(0.9520861583462665, 0.6182861155315162));
	sp.addObject(34, new Point(0.029566479114544686, 0.6591617852121141));
	sp.addObject(35, new Point(0.5517722051512352, 0.6993624012542945));
	sp.addObject(36, new Point(0.5985773423035234, 0.09015512654987268));
	sp.addObject(37, new Point(0.1302463966194547, 0.8578025724285804));
	sp.addObject(38, new Point(0.7746166381781814, 0.2769690719758756));
	sp.addObject(39, new Point(0.8589029274222003, 0.581637438603055));
	sp.addObject(40, new Point(0.8760351067703427, 0.42414857007670226));
	sp.addObject(41, new Point(0.16691839167963762, 0.9878558537208051));
	sp.addObject(42, new Point(0.45497626122573986, 0.15133717933696056));
	sp.addObject(43, new Point(0.25048840788249316, 0.8751366971631338));
	sp.addObject(44, new Point(0.2653936723651924, 0.1967490972564775));
	sp.addObject(45, new Point(0.26333553276956534, 0.3652694953371347));
	sp.addObject(46, new Point(0.08685436414522962, 0.7911934127459953));
	sp.addObject(47, new Point(0.5289735727631011, 0.5247741373883363));
	sp.addObject(48, new Point(0.778304975274336, 0.8817584174236631));
	sp.addObject(49, new Point(0.09665781220911696, 0.9099871709187852));
	sp.addObject(50, new Point(0.3705461626603703, 0.5141461270885725));
	sp.addObject(51, new Point(0.10064674280934871, 0.9368903474703648));
	sp.addObject(52, new Point(0.0969827097464967, 0.7187806840359697));
	sp.addObject(53, new Point(0.6763455882311166, 0.34121500738262867));
	sp.addObject(54, new Point(0.009285639044818383, 0.18819641139722454));
	sp.addObject(55, new Point(0.637097685929098, 0.764863549453951));
	sp.addObject(56, new Point(0.22792410985054024, 0.881844580039341));
	sp.addObject(57, new Point(0.7218346775578567, 0.681446861042959));
	sp.addObject(58, new Point(0.9370944345583951, 0.4493407429125619));
	sp.addObject(59, new Point(0.9864924518504237, 0.4567448295939295));
	sp.addObject(60, new Point(0.9493940163290646, 0.024306925200879737));
	sp.addObject(61, new Point(0.8310438992540243, 0.329154486543633));
	sp.addObject(62, new Point(0.03765875631645543, 0.5083461785984452));
	sp.addObject(63, new Point(0.2291965145184527, 0.49069832007483494));
	sp.addObject(64, new Point(0.25970223366826994, 0.9383195988946456));
	sp.addObject(65, new Point(0.9592464186344276, 0.25092320837452353));
	sp.addObject(66, new Point(0.1862653055754132, 0.9099789555867709));
	sp.addObject(67, new Point(0.0222771854422239, 0.47402786760159676));
	sp.addObject(68, new Point(0.28330585678202225, 0.3171403983588055));
	sp.addObject(69, new Point(0.977836139422087, 0.09381491546557041));
	sp.addObject(70, new Point(0.6968274765613084, 0.8579681506131243));
	sp.addObject(71, new Point(0.627416697061386, 0.5315714300719789));
	sp.addObject(72, new Point(0.3417673563636434, 0.8585695290515241));
	sp.addObject(73, new Point(0.3325203066705765, 0.26873914509455876));
	sp.addObject(74, new Point(0.5060332277052032, 0.9689853071717838));
	sp.addObject(75, new Point(0.26676716521274946, 0.6592443270574051));
	sp.addObject(76, new Point(0.1465998713353458, 0.19779286121413764));
	sp.addObject(77, new Point(0.07046969530604708, 0.3056137860292656));
	sp.addObject(78, new Point(0.676645747752422, 0.5689215090879775));
	sp.addObject(79, new Point(0.701278807414769, 0.9685127268638457));
	sp.addObject(80, new Point(0.3210310562423865, 0.40791309047545077));
	sp.addObject(81, new Point(0.7559575095499154, 0.031096651427844568));
	sp.addObject(82, new Point(0.05198817704839165, 0.8947430253027102));
	sp.addObject(83, new Point(0.17603238018081313, 0.9975784884488293));
	sp.addObject(84, new Point(0.7077165967457323, 0.05645018247486211));
	sp.addObject(85, new Point(0.044018330824747376, 0.36966898203151166));
	sp.addObject(86, new Point(0.1436437374360945, 0.8152068183035508));
	sp.addObject(87, new Point(0.12710742814613296, 0.5150567633179954));
	sp.addObject(88, new Point(0.1694346293016048, 0.056092261689898226));
	sp.addObject(89, new Point(0.9316583213607061, 0.8188523462402392));
	sp.addObject(90, new Point(0.5844023299022152, 0.9337172123600486));
	sp.addObject(91, new Point(0.2945172709664855, 0.49192748312783174));
	sp.addObject(92, new Point(0.8397925134578197, 0.7979783020941208));
	sp.addObject(93, new Point(0.9561479838521897, 0.8993400646607459));
	sp.addObject(94, new Point(0.7284851098691866, 0.18660490223846127));
	sp.addObject(95, new Point(0.13574225371809812, 0.16754190715001482));
	sp.addObject(96, new Point(0.030976827776841964, 0.3057938468862117));
	sp.addObject(97, new Point(0.8599286471291272, 0.1308244245518142));
	sp.addObject(98, new Point(0.23107798751150577, 0.3001095314992386));
	sp.addObject(99, new Point(0.6843923730214426, 0.3854659141175416));
//	SnapshotVisualizer.drawSnapShot(sp);
	DBSCANClustering dbc = new DBSCANClustering(sp);
	ArrayList<Cluster> cluster = dbc.cluster();
	for(Cluster c : cluster) {
	    System.out.println(c);
	}
	SnapshotVisualizer.drawClusters(cluster, sp);
    }
}
